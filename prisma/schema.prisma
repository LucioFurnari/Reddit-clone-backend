// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid()) @db.Uuid
  email     String      @unique
  username  String
  password  String
  createdAt DateTime    @default(now())

  subreddit Subreddit[]
  members   UserOnSubreddit[]
  posts     Post[]
  comments  Comment[]
}

model Subreddit {
  id          String   @id @default(uuid()) @db.Uuid
  name        String   @unique
  description String
  createdAt   DateTime @default(now())
  creatorId   String
  creator     User     @relation(fields: [creatorId], references: [id])

  posts       Post[]
  members     UserOnSubreddit[]
}

model Post {
  id          String    @id @default(uuid()) @db.Uuid
  title       String
  content     String?   // Optional for post with only images or links

  createdAt   DateTime  @default(now())
  authorId    String
  subredditId String

  author      User      @relation(fields: [authorId], references: [id])
  subreddit   Subreddit @relation(fields: [subredditId], references: [id])
  comments    Comment[]
}

model Comment {
  id          String   @id @default(uuid()) @db.Uuid
  content     String
  createdAt   DateTime @default(now())
  authorId    String
  postId      String
  parentId    String?  // For replies to other comments
  karma       Int      @default(0) // Comment karma

  author      User     @relation(fields: [authorId], references: [id])
  post        Post     @relation(fields: [postId], references: [id])
  parent      Comment? @relation("ParentComment", fields: [parentId], references: [id])
  replies     Comment[]@relation("ParentComment") // Replies to this comment
}

model UserOnSubreddit {
  id          String    @id @default(uuid()) @db.Uuid
  userId      String
  subredditId String
  joinedAt    DateTime  @default(now())

  user        User      @relation(fields: [userId], references: [id])
  subreddit   Subreddit @relation(fields: [subredditId], references: [id])

  @@unique([userId, subredditId])  // Ensure a user can join a subreddit only once
}